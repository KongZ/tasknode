apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'
apply from: 'buildtools/test-output.gradle'

group = 'co.hypcode'
version = '0.0.1'
description = "Hypcode Task Node"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

configurations {
  all*.exclude group: 'log4j', module: 'log4j'
}

dependencies {
    // Commons
    compile ('javax.servlet:javax.servlet-api:3.+')
    compile ('javax.servlet.jsp:jsp-api:2.2')
    compile ('com.fasterxml.jackson.core:jackson-core:2.8.8')
    compile ('com.fasterxml.jackson.core:jackson-databind:2.8.8')
    compile ('com.fasterxml.jackson.core:jackson-annotations:2.8.8')

    // Node
    compile ('org.redisson:redisson:3.5.4')
    compile ('com.google.guava:guava:21.0')
    compile ('org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.26')
    compile ('org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:2.26')
    compile ('org.glassfish.jersey.media:jersey-media-moxy:2.26')
    compile ('org.glassfish.jersey.media:jersey-media-json-jackson:2.26')
    compile ('org.glassfish.jersey.inject:jersey-hk2:2.26')
    
	 // Logging
    runtime ('org.slf4j:slf4j-log4j12:1.7.25')
    compile ('org.slf4j:slf4j-api:1.7.25')
    compile ('org.apache.logging.log4j:log4j-core:2.9.1')
    compile ('org.apache.logging.log4j:log4j-slf4j-impl:2.9.1')
    compile ('org.apache.logging.log4j:log4j-1.2-api:2.9.1')

    // Test
    testCompile ('junit:junit:4.12') {
        exclude(module: 'org.hamcrest')
    }
    testCompile ('org.hamcrest:hamcrest-library:1.3')
}

jacocoTestReport {
    description "Generate Jacoco report"
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

jar {
    from(project.projectDir) {
        include 'LICENSE.md'
        into 'META-INF'
    }
}

mainClassName = "co.hypcode.tasknode.Application"
applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=./conf/log4j2.xml"]
applicationDistribution.from("src/main/resources") {
    into "conf"
}
